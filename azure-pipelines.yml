# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $url = "https://go.microsoft.com/fwlink/?linkid=2026036"
      $output = "adksetup.exe"
      $start_time = Get-Date
      Invoke-WebRequest -Uri $url -OutFile $(Build.SourcesDirectory)/$output
      Write-Output "Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)"

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '.\adksetup.exe /quiet'

- task: AzureCLI@1
  displayName: 'Download IoT Core Packages'
  inputs:
    azureSubscription: 'Azure'
    scriptLocation: inlineScript
    inlineScript: |
      az storage blob download --account-name imxiotcoreteststorage --container-name imxiotcoreblobcontainer --name Windows10_IoTCore_Packages_ARM32_en-us_17763_253.iso --file $(Build.SourcesDirectory)/Windows10_IoTCore_Packages_ARM32_en-us_17763_253.iso

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $mountResult = Mount-DiskImage "$(Build.SourcesDirectory)\Windows10_IoTCore_Packages_ARM32_en-us_17763_253.iso" -PassThru
      $driveLetter = ($mountResult | Get-Volume).DriveLetter
      $msiPath = $driveLetter + ":\Windows_10_IoT_Core_ARM_Packages.msi"
      msiexec.exe /i $msiPath /quiet /qn /L*V "$(Build.SourcesDirectory)\msi.log"

