# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '$url = "https://go.microsoft.com/fwlink/?linkid=2026036";
$output = "myadksetup.exe";
$start_time = Get-Date;

Invoke-WebRequest -Uri $url -OutFile $output;
Write-Output "Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)";'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '.\myadksetup.exe /quiet'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '$url = "https://software-download.microsoft.com/db/Windows10_IoTCore_Packages_ARM32_en-us_17763_253.iso?t=35b6ace8-aeb0-4fdb-ac0c-9c117ac905cc&e=1560908115&h=c7e256e38802702826e887d53eafaff4";
      $output = "Windows10_IoTCore_Packages_ARM32_en-us_17763_253.iso";
      $start_time = Get-Date;
      
      Invoke-WebRequest -Uri $url -OutFile $output;
      Write-Output "Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)";
      $mountResult = Mount-DiskImage "$PWD\Windows10_IoTCore_Packages_ARM32_en-us_17763_253.iso" -PassThru;
      $driveLetter = ($mountResult | Get-Volume).DriveLetter;

      $msiPath = $driveLetter + ":\Windows_10_IoT_Core_ARM_Packages.msi";
      msiexec.exe /i $msiPath /quiet /qn /L*V "$PWD\msi.log";'
